list all variables defined within a workspace
ls()
create a variable
v <- 1 : 10
and remove it
rm(v)
create two of them
v <- 1 : 10
w <- 1.5 * v	#notice vectorization
save the workspace to a file
<--- this is a comment
ls()
v <- 1 : 10
v
ls()
rm(v)
ls()
v <- 1 : 10
v
v * 1.5
w <- 1.5 * v	#notice vectorization
save.image(file = 'myws.Rdata')
getwd()
dir()
ls()
rm(list = ls())
ls()
load('myws.Rdata')
ls()
help.start()
help(':')
1:10
?plot
apropos('plot')
apropos('e')
apropos('exp')
getwd()
dir()
list.files()
list.files('../')
setwd('wd')
system('mkdir wd')
setwd('wd')
setwd('../')
dir()
2^3
2^-3
10^12
1 < 2
1 < 2 || 3 > 4	#OR
1 < 2 && 3 > 4	#AND
! 1<2			#NOT
(! 1<2) || 3<4
! (1<2 || 3<4)	#parenthesis DO matter!
pi
exp(1)
a <- 2
a = 2
b <- a * 4
b
a * 4 -> c
b == c
(a <- 2)
a = 2
a
c(3,5,6)
v <- c(3,5,6)
v[2]
length(v)
v[-3]
tail(v, 3)
tail(v, 1)
tail(v, 3)[3]
tail(v, 3)[1]
v
v[3] <- -10
v
v[6] <- 34
v
v
v <- c(3,5,6)#
v[2]#
length(v)#
v[-3]#
v[3] <- -10#
v
v + 5	#vectorization (of +)
2 * v 	#vectorization (of *)
v ^ 2	#vectorization (of ^)
w <- v + 1; w		# ; separates commands that are entered on the same line
names(w) <- c('Exp1', 'Exp2', 'Exp3')
w
w[1]
w['Exp1']
w <- c(Exp1 = 4, Exp2 = 6, Exp3 = -9)
w
w <- Exp1 = 4	#ops...
w <- Exp1 = 4	#ops...
w <- c(Exp1 = 4)
w
c('1', '2', '3')	#a vector of class character
letters[1:5]
c(letters[1:5], 1 : 5)	#conversion to least restrictive type
c(letters[1:5], 1 : 5)	 * 3#conversion to least restrictive type
weight <- c( 60, 58 )
height <- c( 170, 169 )
( bmi <- weight / height ^ 2 )
height <- c( 170, 169 ) / 100
( bmi <- weight / height ^ 2 )
c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20) #want to go up to 100?
1:100
100:1
rev( 1 : 100 )
c(1,1,1,1,1,1)
rep(1,6)
rep(c(1,2), each = 4)
rep(c(1,2), times = c(3,7))
seq(1,100, by = 2)
seq(0,100, by = 2)		#same as seq(0,100,2)
seq(2,100, length = 50)
seq(0,100, length = 50)
1 : 10 + 1 : 3
?suppressWarnings
M <- matrix(1:9, ncol = 3)
M
M <- matrix(1:10, ncol = 3)		#ops...
M
M <- matrix(1:9, nrow = 3, ncol = 3)
M <- matrix(1:12, nrow = 2, ncol = 6)
M
N <- matrix(1:9, nrow = 3, byrow = TRUE)
N
M
M <- matrix(1:9, nrow = 3)
M
N
t(M) == N
all(t(M) == N)
M * 2
M / 2
M + 1
M - 3
M + N
M ^ 2
ls()
Mrn <- M + runif(9, 0, 0.01)
Mrn
Minv <- solve(Mrn)   #inverse
Minv
Mrn %*% Minv
